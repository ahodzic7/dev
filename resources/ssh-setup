#!/usr/bin/env bash

# Hardcoded email address
DEFAULT_EMAIL="adish96@live.com"
# Allow passing email as a parameter
EMAIL="${1:-$DEFAULT_EMAIL}"

SSH_KEY_PATH="$HOME/.ssh/id_rsa"

# Generate SSH key if it doesn't already exist
if [[ ! -f "$SSH_KEY_PATH" ]]; then
    echo "Generating SSH key..."
    ssh-keygen -t rsa -b 4096 -C "$EMAIL" -f "$SSH_KEY_PATH" -N ""
    echo "SSH key generated."
else
    echo "SSH key already exists at $SSH_KEY_PATH."
    echo ""
    echo "1) Remove the existing SSH key:"
    echo "   rm -f \"$SSH_KEY_PATH\" \"$SSH_KEY_PATH.pub\""
    echo ""
    echo "2) Rename the existing SSH key (instead of deleting it):"
    echo ""
    echo "   mv \"$SSH_KEY_PATH\" \"$SSH_KEY_PATH.old_\$TIMESTAMP\""
    echo "   mv \"$SSH_KEY_PATH.pub\" \"$SSH_KEY_PATH.pub.old_\$TIMESTAMP\""
    echo ""
fi

# Start the SSH agent if it's not already running
echo "Starting SSH agent..."
eval "$(ssh-agent -s)"

# Add the SSH key to the agent
echo "Adding SSH key to the SSH agent..."
ssh-add "$SSH_KEY_PATH"

# Display public key and guide user to add it to GitHub
echo "Your public SSH key is:"
cat "$HOME/.ssh/id_rsa.pub"
echo ""
echo "Copy this key and add it to GitHub:"
echo "1. Go to GitHub > Settings > SSH and GPG keys."
echo "2. Click 'New SSH key' and paste the key there."
echo "3. Give it a title and save."
echo ""
echo "Once added, you can test your connection using:"
echo "ssh -T git@github.com"

